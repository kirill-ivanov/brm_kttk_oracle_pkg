CREATE OR REPLACE PACKAGE PK406_INFRANET_DATA
IS
    --
    -- ДАННЫЕ   ДЛЯ   ЭКСПОРТА   В   B I L L I N G   S E R V E R   ( В. Малиновский )
    --
    -- ==============================================================================
    c_PkgName   constant varchar2(30) := 'PK406_INFRANET_DATA';
    -- ==============================================================================
    c_RET_OK    constant integer := 0;
    c_RET_ER		constant integer :=-1;
    
    type t_refc is ref cursor;
    
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    -- Экспорт данных в систему подготовки данных по простоям и SLA
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    TYPE t_disc IS RECORD (
              ORDER_NO       VARCHAR2(100), 
              ACCOUNT_NO     VARCHAR2(40), 
              COMPANY        VARCHAR2(1024), 
              SPEED          VARCHAR2(20), 
              S_POINT        VARCHAR2(1000), 
              D_POINT        VARCHAR2(1000),
              ORDER_DATE     DATE,
              NAME           VARCHAR2(400),
              CYCLE_START_T  DATE, 
              CYCLE_END_T    DATE,
              PURCHASE_START_T DATE,
              PURCHASE_END_T DATE,
              USAGE_START_T  DATE,
              USAGE_END_T    DATE,
              FREE_DOWNTIME  NUMBER,
              EARNED_TYPE    NUMBER
         );
    TYPE rc_disc IS REF CURSOR RETURN t_disc;
    
    PROCEDURE Export_for_discount( 
                   p_recordset  OUT t_refc
               );
               
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    -- Экспорт информации о заказах
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    TYPE t_order IS RECORD (
             ACCOUNT_NO  VARCHAR2(40), 
             ORDER_NO    VARCHAR2(100),  
             DATE_FROM   DATE, 
             DATE_TO     DATE, 
             CREATE_DATE DATE, 
             SERVICE     VARCHAR2(400), 
             SERVICE_ID  INTEGER, 
             STATUS      VARCHAR2(10)
         );
    TYPE rc_order IS REF CURSOR RETURN t_order;
    
    PROCEDURE Export_orders( 
                   p_recordset IN OUT SYS_REFCURSOR --rc_order
               );
    
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    -- Список заказов с двойной тарификацией
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    TYPE t_ag_order IS RECORD (
             CONTRACT_NO VARCHAR2(100),
             ACCOUNT_NO  VARCHAR2(100),
             ACCOUNT_ID  INTEGER, 
             ORDER_NO    VARCHAR2(100),  
             ORDER_ID    INTEGER,
             DATE_FROM   DATE, 
             DATE_TO     DATE
         );
    TYPE rc_ag_order IS REF CURSOR RETURN t_ag_order;
    
    PROCEDURE List_ag_orders( 
                   p_recordset IN OUT SYS_REFCURSOR, --rc_ag_order
                   p_date      IN DATE
               );
    
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    -- BDR заказов с двойной тарификацией (вторая часть)
    -- если p_order_id is null - выгружается весь месяц
    -- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
    TYPE t_ag_bdr IS RECORD (
             START_TIME   DATE,
             LOCAL_TIME   DATE,
             ABN_A        VARCHAR2(40),
             ABN_B        VARCHAR2(40),
             DURATION_SEC NUMBER,
             BILL_MINUTES NUMBER,
             AMOUNT       NUMBER,
             PRICE        NUMBER,
             ACCOUNT_ID   INTEGER,
             ORDER_ID     INTEGER,
             PREFIX_A     VARCHAR2(34),
             INIT_Z_NAME  VARCHAR2(255),
             PREFIX_B     VARCHAR2(34),
             TERM_Z_NAME  VARCHAR2(255)
         );
    TYPE rc_ag_bdr IS REF CURSOR RETURN t_ag_bdr;
    
    PROCEDURE Export_ag_bdr( 
                   p_recordset IN OUT SYS_REFCURSOR, --rc_ag_bdr
                   p_period    IN DATE,
                   p_order_id  IN INTEGER DEFAULT NULL  -- NULL - для всех закакзов сразу
               );
    
END PK406_INFRANET_DATA;
/
CREATE OR REPLACE PACKAGE BODY PK406_INFRANET_DATA
IS

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
-- Экспорт данных в систему подготовки данных по простоям и SLA
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
PROCEDURE Export_for_discount( 
               p_recordset  OUT t_refc
           )
IS
    v_prcName    CONSTANT VARCHAR2(30) := 'Export_for_discount';
    v_retcode    INTEGER;
BEGIN
    Pk01_Syslog.Write_msg('Start', c_PkgName||'.'||v_prcName, Pk01_Syslog.L_info );
    -- возвращаем курсор
    OPEN p_recordset FOR
        SELECT O.ORDER_NO, 
               A.ACCOUNT_NO, 
               CS.CUSTOMER    COMPANY, 
               CH.SPEED_STR   SPEED, 
               CH.POINT_SRC   S_POINT, 
               CH.POINT_DST   D_POINT,
               O.DATE_FROM    ORDER_DATE,
               S.SERVICE      NAME,
               OB.DATE_FROM   CYCLE_START_T, 
               OB.DATE_TO     CYCLE_END_T,
               O.DATE_FROM    PURCHASE_START_T,
               O.DATE_TO      PURCHASE_END_T,
               O.DATE_FROM    USAGE_START_T,
               O.DATE_TO      USAGE_END_T,
               OBI.FREE_VALUE FREE_DOWNTIME,
               1              EARNED_TYPE
          FROM ACCOUNT_T A, ACCOUNT_PROFILE_T AP, CUSTOMER_T CS,
               ORDER_T O, ORDER_BODY_T OB, ORDER_BODY_T OBI, 
               ORDER_INFO_T CH, SERVICE_T S 
         WHERE A.STATUS         = 'B'
           AND A.ACCOUNT_TYPE   = 'J'
           AND A.BILLING_ID IN (2001,2002)   
           --   
           AND O.ACCOUNT_ID     = A.ACCOUNT_ID
           AND O.SERVICE_ID     = S.SERVICE_ID
           AND O.SERVICE_ID NOT IN (0,1,2,7)
           AND O.ORDER_ID       = CH.ORDER_ID
           --
           AND AP.ACCOUNT_ID    = A.ACCOUNT_ID
           AND AP.CUSTOMER_ID   = CS.CUSTOMER_ID
           AND AP.DATE_FROM    <= SYSDATE
           AND (AP.DATE_TO IS NULL OR SYSDATE <= AP.DATE_TO )
           --
           AND OB.ORDER_ID      = O.ORDER_ID
           AND OB.CHARGE_TYPE   = 'REC'   
           AND OB.DATE_FROM    <= SYSDATE
           AND (OB.DATE_TO IS NULL OR SYSDATE <= OB.DATE_TO )
           --
           AND OBI.ORDER_ID(+)= O.ORDER_ID
           AND OBI.CHARGE_TYPE(+)  IN ('IDL', 'SLA')
           AND OBI.DATE_FROM(+)    <= SYSDATE
           AND (OBI.DATE_TO IS NULL OR SYSDATE <= OBI.DATE_TO )
        ORDER BY CS.CUSTOMER, A.ACCOUNT_NO, O.ORDER_NO
        ;
EXCEPTION
    WHEN OTHERS THEN
        v_retcode := Pk01_SysLog.Fn_write_Error('ERROR', c_PkgName||'.'||v_prcName);
        IF p_recordset%ISOPEN THEN 
            CLOSE p_recordset;
        END IF;
        RAISE_APPLICATION_ERROR(Pk01_SysLog.n_APP_EXCEPTION, 'msg_id='||v_retcode||':'||c_PkgName||'.'||v_prcName);
END;

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
-- Экспорт информации о заказах
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
PROCEDURE Export_orders( 
               p_recordset  IN OUT SYS_REFCURSOR -- rc_order
           )
IS
    v_prcName    CONSTANT VARCHAR2(30) := 'Export_orders';
    v_retcode    INTEGER;
BEGIN
    Pk01_Syslog.Write_msg('Start', c_PkgName||'.'||v_prcName, Pk01_Syslog.L_info );
    -- возвращаем курсор
    OPEN p_recordset FOR
        SELECT A.ACCOUNT_NO, O.ORDER_NO, O.DATE_FROM, O.DATE_TO, O.CREATE_DATE, S.SERVICE, S.SERVICE_ID, O.STATUS 
          FROM ORDER_T O, ACCOUNT_T A, SERVICE_T S
         WHERE O.ACCOUNT_ID = A.ACCOUNT_ID
           AND A.BILLING_ID IN (Pk00_Const.c_BILLING_KTTK, 
                                Pk00_Const.c_BILLING_OLD,
                                Pk00_Const.c_BILLING_MMTS,
                                Pk00_Const.c_BILLING_OLD_NO_1C)
           AND O.SERVICE_ID = S.SERVICE_ID
        ORDER BY A.ACCOUNT_NO, O.ORDER_NO, O.DATE_FROM
        ;
EXCEPTION
    WHEN OTHERS THEN
        v_retcode := Pk01_SysLog.Fn_write_Error('ERROR', c_PkgName||'.'||v_prcName);
        IF p_recordset%ISOPEN THEN 
            CLOSE p_recordset;
        END IF;
        RAISE_APPLICATION_ERROR(Pk01_SysLog.n_APP_EXCEPTION, 'msg_id='||v_retcode||':'||c_PkgName||'.'||v_prcName);
END;

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
-- Список заказов с двойной тарификацией
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
PROCEDURE List_ag_orders( 
               p_recordset IN OUT SYS_REFCURSOR, --rc_ag_order
               p_date      IN DATE
           )
IS
    v_prcName    CONSTANT VARCHAR2(30) := 'List_ag_orders';
    v_retcode    INTEGER;
    v_date       DATE := NVL(p_date, SYSDATE);
BEGIN
    Pk01_Syslog.Write_msg('Start', c_PkgName||'.'||v_prcName, Pk01_Syslog.L_info );

    -- возвращаем курсор
    OPEN p_recordset FOR
      SELECT c.contract_no,  
             a.account_no, 
             a.account_id, 
             o.order_no, 
             order_id, o.date_from, o.date_to   
        FROM account_t a,
             account_profile_t p,
             contract_t c,
             customer_t cl,
             order_t o
      WHERE a.account_id  = p.account_id
        AND p.contract_id = c.contract_id
        AND p.customer_id = cl.customer_id
        AND a.account_id  = o.account_id 
        AND o.agent_rateplan_id IS NOT NULL
        AND v_date BETWEEN o.date_from AND NVL(o.date_to, TO_DATE('2999','yyyy'))
        AND v_date BETWEEN p.date_from AND NVL(p.date_to, TO_DATE('2999','yyyy'))
    ORDER BY A.ACCOUNT_NO, O.ORDER_NO, O.DATE_FROM
    ;
EXCEPTION
    WHEN OTHERS THEN
        v_retcode := Pk01_SysLog.Fn_write_Error('ERROR', c_PkgName||'.'||v_prcName);
        IF p_recordset%ISOPEN THEN 
            CLOSE p_recordset;
        END IF;
        RAISE_APPLICATION_ERROR(Pk01_SysLog.n_APP_EXCEPTION, 'msg_id='||v_retcode||':'||c_PkgName||'.'||v_prcName);
END;

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
-- BDR заказов с двойной тарификацией (вторая часть)
-- если p_order_id is null - выгружается весь месяц
-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --
PROCEDURE Export_ag_bdr( 
                   p_recordset IN OUT SYS_REFCURSOR, --rc_ag_bdr
                   p_period    IN DATE,
                   p_order_id  IN INTEGER DEFAULT NULL  -- NULL - для всех закакзов сразу
               )
IS
    v_prcName    CONSTANT VARCHAR2(30) := 'Export_ag_bdr';
    v_retcode    INTEGER;
    v_date_from  DATE;
    v_date_to    DATE;
BEGIN
    Pk01_Syslog.Write_msg('Start', c_PkgName||'.'||v_prcName, Pk01_Syslog.L_info );

    IF p_period IS NULL THEN
       Pk01_Syslog.Raise_user_exception('Error, p_period_id is null' , c_PkgName||'.'||v_prcName);
    END IF;
        
    v_date_from  := TRUNC(p_period,'mm');
    v_date_to    := ADD_MONTHS(v_date_from,1)-1/86400;
    
    -- возвращаем курсор
    OPEN p_recordset FOR
      SELECT /*+parallel BDR_AGENT_T 10*/ 
             start_time, 
             local_time, 
             abn_a, abn_b, 
             duration seconds, bill_minutes, amount, price, 
             account_id, order_id, 
             prefix_a, init_z_name, prefix_b, term_z_name
        FROM BDR_AGENT_T
       WHERE (p_order_id IS NULL OR order_id = p_order_id)
         AND rep_period BETWEEN v_date_from AND v_date_to
      ;

EXCEPTION
    WHEN OTHERS THEN
        v_retcode := Pk01_SysLog.Fn_write_Error('ERROR', c_PkgName||'.'||v_prcName);
        IF p_recordset%ISOPEN THEN 
            CLOSE p_recordset;
        END IF;
        RAISE_APPLICATION_ERROR(Pk01_SysLog.n_APP_EXCEPTION, 'msg_id='||v_retcode||':'||c_PkgName||'.'||v_prcName);
END;
               
    
END PK406_INFRANET_DATA;
/
