CREATE OR REPLACE TRIGGER PAY_TRANSFER_T_BI_TRG
BEFORE INSERT OR UPDATE OR DELETE
ON PIN.PAY_TRANSFER_T
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
c_tg_name     CONSTANT VARCHAR2(30) := 'PAY_TRANSFER_T_BI_TRG';
/******************************************************************************
запрещаем изменение начислений сформированных счетов 
изменение возможно только через переформирование
******************************************************************************/
   v_period_id  INTEGER;
BEGIN
   IF :NEW.PERIOD_ID IS NULL THEN
      -- если открыт биллинговый период помещаем записи туда, если нет в открытый
      SELECT PERIOD_ID 
        INTO v_period_id
        FROM ( 
          SELECT P.PERIOD_ID 
            FROM PERIOD_T P
           WHERE P.POSITION IN ('OPEN','BILL')
             AND P.PERIOD_ID >= :NEW.PAY_PERIOD_ID
           ORDER BY P.PERIOD_ID
       )
       WHERE ROWNUM = 1
      ;  
      :NEW.PERIOD_ID := v_period_id;
   END IF;

   -- на всякий случай проставляем автоматом
   :NEW.TRANSFER_DATE := SYSDATE;
   
END INV_ITEM_T_BU_TRG;
/
